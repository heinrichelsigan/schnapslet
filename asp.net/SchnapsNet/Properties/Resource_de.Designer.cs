//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SchnapsNet.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource_de {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource_de() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SchnapsNet.Properties.Resource_de", typeof(Resource_de).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Info ähnelt.
        /// </summary>
        internal static string action_about {
            get {
                return ResourceManager.GetString("action_about", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Weiter ähnelt.
        /// </summary>
        internal static string action_continue {
            get {
                return ResourceManager.GetString("action_continue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Beenden ähnelt.
        /// </summary>
        internal static string action_exit {
            get {
                return ResourceManager.GetString("action_exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hilfe ähnelt.
        /// </summary>
        internal static string action_help {
            get {
                return ResourceManager.GetString("action_help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Spiel laden ähnelt.
        /// </summary>
        internal static string action_load {
            get {
                return ResourceManager.GetString("action_load", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Optionen ähnelt.
        /// </summary>
        internal static string action_options {
            get {
                return ResourceManager.GetString("action_options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Spiel speichern ähnelt.
        /// </summary>
        internal static string action_save {
            get {
                return ResourceManager.GetString("action_save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bildschirmfoto ähnelt.
        /// </summary>
        internal static string action_screenshot {
            get {
                return ResourceManager.GetString("action_screenshot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        internal static string action_settings {
            get {
                return ResourceManager.GetString("action_settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start ähnelt.
        /// </summary>
        internal static string action_start {
            get {
                return ResourceManager.GetString("action_start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Neustart ähnelt.
        /// </summary>
        internal static string action_stop {
            get {
                return ResourceManager.GetString("action_stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        internal static string app_name {
            get {
                return ResourceManager.GetString("app_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Atou ist {0}! ähnelt.
        /// </summary>
        internal static string atou_is {
            get {
                return ResourceManager.GetString("atou_is", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 20 ansagen ähnelt.
        /// </summary>
        internal static string b20a_text {
            get {
                return ResourceManager.GetString("b20a_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 40 ansagen ähnelt.
        /// </summary>
        internal static string b20b_text {
            get {
                return ResourceManager.GetString("b20b_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zurück ähnelt.
        /// </summary>
        internal static string back_button {
            get {
                return ResourceManager.GetString("back_button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Atou tauschen ähnelt.
        /// </summary>
        internal static string bChange_text {
            get {
                return ResourceManager.GetString("bChange_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Weiter ähnelt.
        /// </summary>
        internal static string bContinue_text {
            get {
                return ResourceManager.GetString("bContinue_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Beste Karte wäre: {0} ähnelt.
        /// </summary>
        internal static string best_card_would_be {
            get {
                return ResourceManager.GetString("best_card_would_be", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hilfe ähnelt.
        /// </summary>
        internal static string bHelp_text {
            get {
                return ResourceManager.GetString("bHelp_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start ähnelt.
        /// </summary>
        internal static string bStart_text {
            get {
                return ResourceManager.GetString("bStart_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ende ähnelt.
        /// </summary>
        internal static string bStop_text {
            get {
                return ResourceManager.GetString("bStop_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Erzeugt mit VisualStudio 2022 ähnelt.
        /// </summary>
        internal static string build_with {
            get {
                return ResourceManager.GetString("build_with", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Kartendeck ähnelt.
        /// </summary>
        internal static string carddeck {
            get {
                return ResourceManager.GetString("carddeck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zehn ähnelt.
        /// </summary>
        internal static string cardval_10 {
            get {
                return ResourceManager.GetString("cardval_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ass ähnelt.
        /// </summary>
        internal static string cardval_11 {
            get {
                return ResourceManager.GetString("cardval_11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bube ähnelt.
        /// </summary>
        internal static string cardval_2 {
            get {
                return ResourceManager.GetString("cardval_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dame ähnelt.
        /// </summary>
        internal static string cardval_3 {
            get {
                return ResourceManager.GetString("cardval_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die König ähnelt.
        /// </summary>
        internal static string cardval_4 {
            get {
                return ResourceManager.GetString("cardval_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Klicken Sie auf Weiter ! ähnelt.
        /// </summary>
        internal static string click_continue {
            get {
                return ResourceManager.GetString("click_continue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zudrehen ähnelt.
        /// </summary>
        internal static string close_game {
            get {
                return ResourceManager.GetString("close_game", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zudrehen fehlgeschlagen, Computer hat gewonnen ! ähnelt.
        /// </summary>
        internal static string closing_failed {
            get {
                return ResourceManager.GetString("closing_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Leerkarte ähnelt.
        /// </summary>
        internal static string color_e {
            get {
                return ResourceManager.GetString("color_e", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Herz ähnelt.
        /// </summary>
        internal static string color_h {
            get {
                return ResourceManager.GetString("color_h", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keine Karten im Talon -&gt; Farb- und Stichzwang ! ähnelt.
        /// </summary>
        internal static string color_hit_force_mode {
            get {
                return ResourceManager.GetString("color_hit_force_mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Karo ähnelt.
        /// </summary>
        internal static string color_k {
            get {
                return ResourceManager.GetString("color_k", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keine Karte ähnelt.
        /// </summary>
        internal static string color_n {
            get {
                return ResourceManager.GetString("color_n", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pik ähnelt.
        /// </summary>
        internal static string color_p {
            get {
                return ResourceManager.GetString("color_p", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Treff ähnelt.
        /// </summary>
        internal static string color_t {
            get {
                return ResourceManager.GetString("color_t", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  in  ähnelt.
        /// </summary>
        internal static string colorDelimiter {
            get {
                return ResourceManager.GetString("colorDelimiter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Computer tauscht Atou aus. ähnelt.
        /// </summary>
        internal static string computer_changes_atou {
            get {
                return ResourceManager.GetString("computer_changes_atou", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Computer dreht zu ! ähnelt.
        /// </summary>
        internal static string computer_closed_game {
            get {
                return ResourceManager.GetString("computer_closed_game", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zudrehen des Computers fehlgeschlagen, sie haben gewonnen ! ähnelt.
        /// </summary>
        internal static string computer_closing_failed {
            get {
                return ResourceManager.GetString("computer_closing_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Computer hat mit {0} Punkten gewonnen! ähnelt.
        /// </summary>
        internal static string computer_has_won_points {
            get {
                return ResourceManager.GetString("computer_has_won_points", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Computer sticht mit {0} Punkten. ähnelt.
        /// </summary>
        internal static string computer_hit_points {
            get {
                return ResourceManager.GetString("computer_hit_points", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Computer sagt Paar in {0} an! ähnelt.
        /// </summary>
        internal static string computer_says_pair {
            get {
                return ResourceManager.GetString("computer_says_pair", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Letzter Stich: Computer hat gewonnen ! ähnelt.
        /// </summary>
        internal static string computer_wins_last_hit {
            get {
                return ResourceManager.GetString("computer_wins_last_hit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Erzeuge neuer Spieler Instanzen ähnelt.
        /// </summary>
        internal static string creating_players {
            get {
                return ResourceManager.GetString("creating_players", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Standard Kartendeck ähnelt.
        /// </summary>
        internal static string default_cards {
            get {
                return ResourceManager.GetString("default_cards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Beende das aktuelle Spiel ähnelt.
        /// </summary>
        internal static string ending_game {
            get {
                return ResourceManager.GetString("ending_game", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 40 und genug ! ähnelt.
        /// </summary>
        internal static string fourty_and_enough {
            get {
                return ResourceManager.GetString("fourty_and_enough", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Vierzig in ähnelt.
        /// </summary>
        internal static string fourty_in_color {
            get {
                return ResourceManager.GetString("fourty_in_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Französisches Kartendeck ähnelt.
        /// </summary>
        internal static string french_cards {
            get {
                return ResourceManager.GetString("french_cards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Doppeldeutsches Kartendeck ähnelt.
        /// </summary>
        internal static string german_cards {
            get {
                return ResourceManager.GetString("german_cards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die https://github.com/heinrichelsigan/schnapslet/wiki ähnelt.
        /// </summary>
        internal static string github_uri {
            get {
                return ResourceManager.GetString("github_uri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Schnapslet v2.4.6 - Pre Alpha Release \n
        ///Implementierung des Kartenspiel Schnapsen als einfache Asp.Net WebApp\n
        ///von Heinrich Elsigan (heinrich.elsigan@area23.at)\n\n
        ///Funktionsweise:\n
        ///Das Spiel ist so angelegt, dass man gegen den Computer spielt.\n
        ///Ist man am Zug, so kann man eine Karte ausspielen, indem man auf das Kartensymbol klickt.\n
        ///Andere Optionen, wie \&quot;Atou austauschen\&quot; oder \&quot;Ein Paar Ansagen\&quot; sind ueber die Buttons unterhalb der Kartensymbole moeglich; diese Optionen muessen gewaehlt wer [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string help_text {
            get {
                return ResourceManager.GetString("help_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Letzter Stich: Sie haben gewonnen ! ähnelt.
        /// </summary>
        internal static string last_hit_you_have_won {
            get {
                return ResourceManager.GetString("last_hit_you_have_won", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mehr erfahren ähnelt.
        /// </summary>
        internal static string learn_more {
            get {
                return ResourceManager.GetString("learn_more", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mische Karten ähnelt.
        /// </summary>
        internal static string merging_cards {
            get {
                return ResourceManager.GetString("merging_cards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Neues Spiel started ähnelt.
        /// </summary>
        internal static string newgame_starts {
            get {
                return ResourceManager.GetString("newgame_starts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die kein 2. Paar ähnelt.
        /// </summary>
        internal static string no_second_pair {
            get {
                return ResourceManager.GetString("no_second_pair", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Kein Spiel gestartet! ähnelt.
        /// </summary>
        internal static string nogame_started {
            get {
                return ResourceManager.GetString("nogame_started", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Spieler dreht zu ! ähnelt.
        /// </summary>
        internal static string player_closed_game {
            get {
                return ResourceManager.GetString("player_closed_game", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Polnische Karten ähnelt.
        /// </summary>
        internal static string polish_cards {
            get {
                return ResourceManager.GetString("polish_cards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ansagen ähnelt.
        /// </summary>
        internal static string say_pair {
            get {
                return ResourceManager.GetString("say_pair", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Das ist keine gültige Karte ! ähnelt.
        /// </summary>
        internal static string this_is_no_valid_card {
            get {
                return ResourceManager.GetString("this_is_no_valid_card", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zum Auspielen einfach auf die entsprechende Karte klicken ähnelt.
        /// </summary>
        internal static string toplayout_clickon_card {
            get {
                return ResourceManager.GetString("toplayout_clickon_card", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 20 und genug ! ähnelt.
        /// </summary>
        internal static string twenty_and_enough {
            get {
                return ResourceManager.GetString("twenty_and_enough", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zwanzig in ähnelt.
        /// </summary>
        internal static string twenty_in_color {
            get {
                return ResourceManager.GetString("twenty_in_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ukraine Konfliktdeck ähnelt.
        /// </summary>
        internal static string ukraine_cards {
            get {
                return ResourceManager.GetString("ukraine_cards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sie haben mit {0} Punkten gewonnen! ähnelt.
        /// </summary>
        internal static string you_have_won_points {
            get {
                return ResourceManager.GetString("you_have_won_points", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Farb und Stichzwang muss eingehalten werden ! ähnelt.
        /// </summary>
        internal static string you_must_play_color_hit_force_rules {
            get {
                return ResourceManager.GetString("you_must_play_color_hit_force_rules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sie muessen eine Karte vom Paar ausspielen ! ähnelt.
        /// </summary>
        internal static string you_must_play_pair_card {
            get {
                return ResourceManager.GetString("you_must_play_pair_card", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sie sagen Paar in {0} an! ähnelt.
        /// </summary>
        internal static string you_say_pair {
            get {
                return ResourceManager.GetString("you_say_pair", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ihr Stich mit {0} Punkten. ähnelt.
        /// </summary>
        internal static string your_hit_points {
            get {
                return ResourceManager.GetString("your_hit_points", resourceCulture);
            }
        }
    }
}
