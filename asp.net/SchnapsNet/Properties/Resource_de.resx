<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="action_about" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="action_continue" xml:space="preserve">
    <value>Weiter</value>
  </data>
  <data name="action_exit" xml:space="preserve">
    <value>Beenden</value>
  </data>
  <data name="action_help" xml:space="preserve">
    <value>Hilfe</value>
  </data>
  <data name="action_load" xml:space="preserve">
    <value>Spiel laden</value>
  </data>
  <data name="action_options" xml:space="preserve">
    <value>Optionen</value>
  </data>
  <data name="action_save" xml:space="preserve">
    <value>Spiel speichern</value>
  </data>
  <data name="action_screenshot" xml:space="preserve">
    <value>Bildschirmfoto</value>
  </data>
  <data name="action_settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="action_start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="action_stop" xml:space="preserve">
    <value>Neustart</value>
  </data>
  <data name="app_name" xml:space="preserve">
    <value />
  </data>
  <data name="atou_is" xml:space="preserve">
    <value>Atou ist {0}!</value>
  </data>
  <data name="b20a_text" xml:space="preserve">
    <value>20 ansagen</value>
  </data>
  <data name="b20b_text" xml:space="preserve">
    <value>40 ansagen</value>
  </data>
  <data name="back_button" xml:space="preserve">
    <value>Zurück</value>
  </data>
  <data name="bChange_text" xml:space="preserve">
    <value>Atou tauschen</value>
  </data>
  <data name="bContinue_text" xml:space="preserve">
    <value>Weiter</value>
  </data>
  <data name="best_card_would_be" xml:space="preserve">
    <value>Beste Karte wäre: {0}</value>
  </data>
  <data name="bHelp_text" xml:space="preserve">
    <value>Hilfe</value>
  </data>
  <data name="bStart_text" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="bStop_text" xml:space="preserve">
    <value>Ende</value>
  </data>
  <data name="build_with" xml:space="preserve">
    <value>Erzeugt mit VisualStudio 2022</value>
  </data>
  <data name="call_10_hole" xml:space="preserve">
    <value>10er Loch</value>
    <comment>10</comment>
  </data>
  <data name="call_ace_beggar" xml:space="preserve">
    <value>As-Bettler</value>
    <comment>4</comment>
  </data>
  <data name="call_beggar" xml:space="preserve">
    <value>Bettler</value>
    <comment>2</comment>
  </data>
  <data name="call_default_game" xml:space="preserve">
    <value>Normales Spiel</value>
    <comment>1</comment>
  </data>
  <data name="call_farmers_schnapser" xml:space="preserve">
    <value>Bauern-Schnapser</value>
    <comment>12</comment>
  </data>
  <data name="call_march_through" xml:space="preserve">
    <value>Durchmarsch</value>
    <comment>8</comment>
  </data>
  <data name="call_schnapser" xml:space="preserve">
    <value>Schnapser</value>
    <comment>6</comment>
  </data>
  <data name="call_sirs_schnapser" xml:space="preserve">
    <value>Herren-Schnapser</value>
    <comment>24</comment>
  </data>
  <data name="carddeck" xml:space="preserve">
    <value>Kartendeck</value>
  </data>
  <data name="cardval_10" xml:space="preserve">
    <value>Zehn</value>
  </data>
  <data name="cardval_11" xml:space="preserve">
    <value>Ass</value>
  </data>
  <data name="cardval_2" xml:space="preserve">
    <value>Bube</value>
  </data>
  <data name="cardval_3" xml:space="preserve">
    <value>Dame</value>
  </data>
  <data name="cardval_4" xml:space="preserve">
    <value>König</value>
  </data>
  <data name="clickon_start" xml:space="preserve">
    <value>Klicke auf 'Start' um ein neues Spiel zu starten.</value>
  </data>
  <data name="click_continue" xml:space="preserve">
    <value>Klicken Sie auf Weiter !</value>
  </data>
  <data name="close_game" xml:space="preserve">
    <value>Zudrehen</value>
  </data>
  <data name="closing_failed" xml:space="preserve">
    <value>Zudrehen fehlgeschlagen, Computer hat gewonnen !</value>
  </data>
  <data name="colorDelimiter" xml:space="preserve">
    <value> in </value>
  </data>
  <data name="color_e" xml:space="preserve">
    <value>Leerkarte</value>
  </data>
  <data name="color_h" xml:space="preserve">
    <value>♥</value>
  </data>
  <data name="color_hit_force_mode" xml:space="preserve">
    <value>Keine Karten im Talon -&gt; Farb- und Stichzwang !</value>
  </data>
  <data name="color_k" xml:space="preserve">
    <value>♦</value>
  </data>
  <data name="color_n" xml:space="preserve">
    <value>Keine Karte</value>
  </data>
  <data name="color_p" xml:space="preserve">
    <value>♠</value>
  </data>
  <data name="color_t" xml:space="preserve">
    <value>♣</value>
  </data>
  <data name="computer" xml:space="preserve">
    <value>Computer</value>
  </data>
  <data name="computer_changes_atou" xml:space="preserve">
    <value>Computer tauscht Atou aus.</value>
  </data>
  <data name="computer_closed_game" xml:space="preserve">
    <value>Computer dreht zu !</value>
  </data>
  <data name="computer_closing_failed" xml:space="preserve">
    <value>Zudrehen des Computers fehlgeschlagen, sie haben gewonnen !</value>
  </data>
  <data name="computer_has_won_points" xml:space="preserve">
    <value>Computer hat mit {0} Punkten gewonnen!</value>
  </data>
  <data name="computer_hit_points" xml:space="preserve">
    <value>Computer sticht mit {0} Punkten.</value>
  </data>
  <data name="computer_plays_out" xml:space="preserve">
    <value>Computer spielt aus</value>
  </data>
  <data name="computer_says_pair" xml:space="preserve">
    <value>Computer sagt Paar in {0} an!</value>
  </data>
  <data name="computer_wins_last_hit" xml:space="preserve">
    <value>Letzter Stich: Computer hat gewonnen !</value>
  </data>
  <data name="computer_won_taylor" xml:space="preserve">
    <value>Du bekommst einen Schneider.</value>
  </data>
  <data name="computer_won_tournement" xml:space="preserve">
    <value>Du bekommst ein Bummerl.</value>
  </data>
  <data name="continue_ToolTip" xml:space="preserve">
    <value>Klicken sie hier auf weiter!</value>
  </data>
  <data name="creating_players" xml:space="preserve">
    <value>Erzeuge neuer Spieler Instanzen</value>
  </data>
  <data name="default_cards" xml:space="preserve">
    <value>Standard Kartendeck</value>
  </data>
  <data name="ending_game" xml:space="preserve">
    <value>Beende das aktuelle Spiel</value>
  </data>
  <data name="fourty_and_enough" xml:space="preserve">
    <value>40 und genug !</value>
  </data>
  <data name="fourty_in_color" xml:space="preserve">
    <value>Vierzig in</value>
  </data>
  <data name="french_cards" xml:space="preserve">
    <value>Französisches Kartendeck</value>
  </data>
  <data name="german_cards" xml:space="preserve">
    <value>Doppeldeutsches Kartendeck</value>
  </data>
  <data name="github_uri" xml:space="preserve">
    <value>https://github.com/heinrichelsigan/schnapslet/wiki</value>
  </data>
  <data name="help_text" xml:space="preserve">
    <value>Schnapslet v2.23.43 - Pre Alpha Release 
Implementierung des Kartenspiel Schnapsen als einfache Asp.Net WebApp
von Heinrich Elsigan (heinrich.elsigan@area23.at)

Funktionsweise:
Das Spiel ist so angelegt, dass man gegen den Computer spielt.
Ist man am Zug, so kann man eine Karte ausspielen, indem man auf das Kartensymbol klickt.
Andere Optionen, wie "Atou austauschen" oder "Ein Paar Ansagen" sind 
ueber die Buttons unterhalb der Kartensymbole moeglich; 
diese Optionen muessen gewaehlt werden, bevor man eine Karte auspielt!
Ist der Computer am Zug, so spielt dieser eine Karte aus und 
man selbst kann dann durch Klick auf die eigenen Karten, stechen oder draufgeben!
Die Regeln entsprechen dem oesterreichischen Schnapsen, 
allerdings gibt es bei noch kleine Bugs!
Zudrehen ist implementiert:
Man muss einfach auf die Atou Karte klicken.

Ideen, Vorschlaege, Verbesserungen werden gerne angenommen!</value>
  </data>
  <data name="imageAtou_AltText" xml:space="preserve">
    <value>Spiel ist zugedreht.</value>
  </data>
  <data name="imageAtou_ToolTip" xml:space="preserve">
    <value>Auf Atou klicken für Zudrehen.</value>
  </data>
  <data name="imageMerge_ToolTip" xml:space="preserve">
    <value>Hier klicken um ein Spiel zu starten.</value>
  </data>
  <data name="image_fist" xml:space="preserve">
    <value>Draufklopfen!</value>
  </data>
  <data name="image_take" xml:space="preserve">
    <value>Abheben!</value>
  </data>
  <data name="last_hit_you_have_won" xml:space="preserve">
    <value>Letzter Stich: Sie haben gewonnen !</value>
  </data>
  <data name="learn_more" xml:space="preserve">
    <value>Mehr erfahren</value>
  </data>
  <data name="merging_cards" xml:space="preserve">
    <value>Mische Karten</value>
  </data>
  <data name="newgame_starts" xml:space="preserve">
    <value>Neues Spiel started</value>
  </data>
  <data name="nogame_started" xml:space="preserve">
    <value>Kein Spiel gestartet!</value>
  </data>
  <data name="no_second_pair" xml:space="preserve">
    <value>kein 2. Paar</value>
  </data>
  <data name="player_closed_game" xml:space="preserve">
    <value>Spieler dreht zu !</value>
  </data>
  <data name="polish_cards" xml:space="preserve">
    <value>Polnische Karten</value>
  </data>
  <data name="say_pair" xml:space="preserve">
    <value>ansagen</value>
  </data>
  <data name="sPoints" xml:space="preserve">
    <value>Punkte</value>
  </data>
  <data name="sRest" xml:space="preserve">
    <value>Rest</value>
  </data>
  <data name="this_is_no_valid_card" xml:space="preserve">
    <value>Das ist keine gültige Karte !</value>
  </data>
  <data name="toplayout_clickon_card" xml:space="preserve">
    <value>Zum Auspielen einfach auf die entsprechende Karte klicken</value>
  </data>
  <data name="twenty_and_enough" xml:space="preserve">
    <value>20 und genug !</value>
  </data>
  <data name="twenty_in_color" xml:space="preserve">
    <value>Zwanzig in</value>
  </data>
  <data name="ukraine_cards" xml:space="preserve">
    <value>Ukraine Konfliktdeck</value>
  </data>
  <data name="you" xml:space="preserve">
    <value>Du</value>
  </data>
  <data name="your_hit_points" xml:space="preserve">
    <value>Ihr Stich mit {0} Punkten.</value>
  </data>
  <data name="you_have_won_points" xml:space="preserve">
    <value>Sie haben mit {0} Punkten gewonnen!</value>
  </data>
  <data name="you_must_play_color_hit_force_rules" xml:space="preserve">
    <value>Farb und Stichzwang muss eingehalten werden !</value>
  </data>
  <data name="you_must_play_pair_card" xml:space="preserve">
    <value>Sie muessen eine Karte vom Paar ausspielen !</value>
  </data>
  <data name="you_say_pair" xml:space="preserve">
    <value>Sie sagen Paar in {0} an!</value>
  </data>
  <data name="you_won_taylor" xml:space="preserve">
    <value>Computer bekommt einen Schneider.</value>
  </data>
  <data name="you_won_tournement" xml:space="preserve">
    <value>Computer bekommt ein Bummerl.</value>
  </data>
</root>